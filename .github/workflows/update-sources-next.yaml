# Generated for Konflux Application openshift-pipelines-core-next by openshift-pipelines/hack. DO NOT EDIT
name: update-sources-next

on:
  workflow_dispatch: {}
  schedule:
  - cron: "0 1 * * *" # At 1AM everyday

jobs:

  update-sources:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'openshift-pipelines' # do not run this elsewhere
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout the current repo
      uses: actions/checkout@v4
      with:
        ref: next

    - name: Clone openshift-pipelines/pipelines-as-code
      run: |
        rm -fR upstream
        git clone https://github.com/openshift-pipelines/pipelines-as-code upstream
        pushd upstream
        git checkout -B release-v0.34.x origin/release-v0.34.x
        popd
    - name: Generate patches
      run: |
        pushd upstream
        rm ../.konflux/patches/0000-go1.23.patch || true
        sed -i "s%go1.23.8*%go1.23.6%g" go.mod
        sed -i "s%go1.24.*%go1.23%g" go.mod
        sed -i "s%go 1.23.8%go 1.23.6%g" vendor/modules.txt

        go mod tidy && go mod vendor

        if [[ -z $(git status --porcelain --untracked-files=no) ]]; then
              echo "No change, exiting"
              exit 0
        else
          git diff > ../.konflux/patches/0000-go1.23.patch
        fi
        # clean after yourself >:D
        git checkout HEAD go.mod vendor/modules.txt
        
        popd
    - name: Commit new changes
      run: |
        git config user.name openshift-pipelines-bot
        git config user.email pipelines-extcomm@redhat.com
        git checkout -b actions/update/sources-next
        touch head
        pushd upstream
        OLD_COMMIT=$(cat ../head)
        NEW_COMMIT=$(git rev-parse HEAD)
        echo Previous commit: ${OLD_COMMIT}
        git show --stat ${OLD_COMMIT}
        echo New commit: ${NEW_COMMIT}
        git show --stat ${NEW_COMMIT}
        git diff --stat ${NEW_COMMIT}..${OLD_COMMIT} > /tmp/diff.txt
        git rev-parse HEAD > ../head
        popd
        rm -rf upstream/.git
        git add -f upstream head .konflux

        if [[ -z $(git status --porcelain --untracked-files=no) ]]; then
          echo "No change, exiting"
          exit 0
        fi

        git commit -F- <<EOF
        [bot] Update next from openshift-pipelines/pipelines-as-code to ${NEW_COMMIT}

            $ git diff --stat ${NEW_COMMIT}..${OLD_COMMIT}
        $(cat /tmp/diff.txt | sed 's/^/    /' | head -c 55555)
        
        https://github.com/openshift-pipelines/pipelines-as-code/compare/${NEW_COMMIT}..${OLD_COMMIT}
        EOF
        
        git push -f origin actions/update/sources-next

        if [ "$(gh pr list --base next --head actions/update/sources-next --json url --jq 'length')" = "0" ]; then
          echo "creating PR..."
          gh pr create -B next -H actions/update/sources-next --label=automated --label=upstream --fill
        else
          echo "a PR already exists, editing..."
          gh pr edit --title "[bot] Update next from openshift-pipelines/pipelines-as-code to ${NEW_COMMIT}" --body "$(cat /tmp/diff.txt | sed 's/^/    /' | head -c 55555)"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
